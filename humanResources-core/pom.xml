<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.humanresources</groupId>
    <artifactId>humanResources-core</artifactId>
    <name>humanResources-core</name>
    <version>0.0.1-SNAPSHOT</version>

    <parent>
        <groupId>org.humanresources</groupId>
        <artifactId>humanresources-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <packaging>jar</packaging>


    <properties>
    
    <!-- querydsl.version>4.1.4</querydsl.version -->
    
    </properties>


	<dependencies>
	
        
	    <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>

		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-test</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
		        
		<!-- dependency>
		    <groupId>com.querydsl</groupId>
		    <artifactId>querydsl-jpa</artifactId>
		    <version>${querydsl.version}</version>
		</dependency>

		<dependency>
		    <groupId>com.querydsl</groupId>
		    <artifactId>querydsl-apt</artifactId>
		    <version>${querydsl.version}</version>
		</dependency -->
		
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-core</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>commons-beanutils</groupId>
		    <artifactId>commons-beanutils</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc7</artifactId>
            <version>12.1.0.1</version>
        </dependency>
        
        

	</dependencies>

    <build>
    
            <filters>
	            <!--
	                Ensures that the config.properties file is always loaded from the
	                configuration directory of the active Maven profiles
	            -->
	            <filter>profiles/${build.profile.id}/config.properties</filter>
	        </filters>
        <resources>
	    <!--
	        Placeholders that are found from the files located in the configured resource
	        directories are replaced with the property values found from the profile
	        specific configuration file.
	    -->
	    <resource>
		        <filtering>true</filtering>
		        <directory>src/main/resources</directory>
		    </resource>
		</resources>
	        
        
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Runs unit tests -->
            <plugin>
                <!-- The Surefire Plugin is designed to run unit tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20.1</version>
                <dependencies>
				 <dependency>
				  <groupId>org.apache.maven.surefire</groupId>
				  <artifactId>surefire-junit47</artifactId>
				  <version>2.20.1</version>
				 </dependency>
				</dependencies>
                <configuration>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run -->
                    <!-- excludes>
                        <exclude>**/*ITest.java</exclude>
                    </excludes>
                    
                    <includes>
					  <include>**/*.class</include>
					 </includes -->
					<excludedGroups>org.humanResources.annotation.type.IntegrationTest</excludedGroups>
 
 
                    <!--forkCount=1/reuseForks=false executes each test class in its own JVM process, one after another.
                     It creates the highest level of separation for the test execution,
                    but it would probably also give you the longest execution time of all the available options. Consider it as a last resort. -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks> <!-- parallel tests executions disabled-->
<!--                    <argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine> -->
                    <argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
                    <systemPropertyVariables>
                        <spring.profiles.active>unitTest,humanResources</spring.profiles.active>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <!-- The Failsafe Plugin is designed to run integration tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20.1</version>
                 <dependencies>
				  <dependency>
				   <groupId>org.apache.maven.surefire</groupId>
				   <artifactId>surefire-junit47</artifactId>
				   <version>2.20.1</version>
				  </dependency>
				 </dependencies>
                <configuration>
	                <!-- includes>
				    	<include>**/*ITest.java</include>
				    </includes -->
					<groups>org.humanResources.annotation.type.IntegrationTest</groups>
				    
                    <systemPropertyVariables>
                        <spring.profiles.active>integrationTest,humanResources</spring.profiles.active>
                    </systemPropertyVariables>
                </configuration>
                
                <executions>
                    <!--
                        Invokes both the integration-test and the verify goals of the
                        Failsafe Maven plugin
                    -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!--
                                Skips integration tests if the value of skip.integration.tests
                                property is true
                            -->
                            <includes>
						     <include>**/*.class</include>
						    </includes>
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            
            
            <!--querydsl generated java code  -->
            <!--add integration test folders  -->
            <!-- plugin>
			  <groupId>com.mysema.maven</groupId>
			  <artifactId>apt-maven-plugin</artifactId>
			  <version>1.1.3</version>
			  <executions>
			    <execution>
			      <goals>
			        <goal>process</goal>
			      </goals>
			      <configuration>
			        <outputDirectory>target/generated-sources/java</outputDirectory>
			        <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
			      </configuration>
			    </execution>
			  </executions>
			</plugin-->
			
			<plugin>
			  <groupId>org.codehaus.mojo</groupId>
			  <artifactId>build-helper-maven-plugin</artifactId>
			  <executions>
			    <execution>
			      <id>add-source</id>
			      <phase>generate-sources</phase>
			      <goals>
			        <goal>add-source</goal>
			      </goals>
			      <configuration>
			        <sources>
			          <source>${project.build.directory}/generated-sources/java/</source>
			        </sources>
			      </configuration>
			    </execution>
			    
			    <!-- Add a new source directory to our build -->
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the source directory of our integration tests -->
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <!-- Add a new resource directory to our build -->
                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the resource directory of our integration tests -->
                            <resources>
                                <!--
                                    Placeholders that are found from the files located in the configured resource
                                    directories are replaced with the property values found from the profile
                                    specific configuration file.
                                -->
                                <resource>
                                    <filtering>true</filtering>
                                    <directory>src/integration-test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
			  </executions>
			</plugin>
			

        </plugins>
    </build>
</project>